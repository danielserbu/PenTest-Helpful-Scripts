from bs4 import BeautifulSoup
import requests
import base64
import re
import argparse

def convert_images_to_base64(input_file, output_file):
    try:
        with open(input_file, 'r', encoding='utf-8') as file:
            html_content = file.read()

        soup = BeautifulSoup(html_content, 'html.parser')
        img_tags = soup.find_all('img')
        url_pattern = re.compile(r'^https?://', re.IGNORECASE)

        for img in img_tags:
            src = img.get('src')
            if src and re.match(url_pattern, src):
                try:
                    response = requests.get(src)
                    if response.status_code == 200:
                        content_type = response.headers.get('content-type')
                        if content_type is not None and content_type.startswith('image'):
                            encoded_image = base64.b64encode(response.content).decode('utf-8')
                            img['src'] = f'data:{content_type};base64,{encoded_image}'
                except Exception as e:
                    print(f"Error processing {src}: {e}")

        modified_html = soup.prettify()

        with open(output_file, 'w', encoding='utf-8') as file:
            file.write(modified_html)
        
        print(f"Conversion successful! Modified HTML saved to '{output_file}'")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Convert images in HTML to base64.')
    parser.add_argument('input_file', help='Input HTML file path')
    parser.add_argument('output_file', help='Output HTML file path')

    args = parser.parse_args()

    convert_images_to_base64(args.input_file, args.output_file)

# python html_image_base64_converter.py input.html output.html